<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c5e6ae3e-3acf-4349-a611-30f6f5e01cde" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/membership/validator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/membership/application.go" beforeDir="false" afterPath="$PROJECT_DIR$/membership/application.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/membership/application_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/membership/application_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/membership/dto.go" beforeDir="false" afterPath="$PROJECT_DIR$/membership/dto.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/membership/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/membership/repository.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="develop" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2B4Mp5nVgz4X1ds8GFL4lEd8wkv" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Git.Branch.Popup.ShowAllRemotes": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "C:/Users/boldf"
  }
}]]></component>
  <component name="RunManager" selected="Go Test.application_test.go">
    <configuration name="TestDelete/멤버십을_삭제한다. in github.com/stretchr/testify/assert/membership" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang_web_programming" />
      <working_directory value="$PROJECT_DIR$/membership" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/stretchr/testify/assert/membership" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestDelete\E$/^\Q멤버십을_삭제한다.\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestDelete/입력한_id가_존재하지_않을_때_예외_처리한다. in github.com/stretchr/testify/assert/membership" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang_web_programming" />
      <working_directory value="$PROJECT_DIR$/membership" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/stretchr/testify/assert/membership" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestDelete\E$/^\Q입력한_id가_존재하지_않을_때_예외_처리한다.\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestDelete/id를_입력하지_않았을_때_예외_처리한다. in github.com/stretchr/testify/assert/membership" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang_web_programming" />
      <working_directory value="$PROJECT_DIR$/membership" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/stretchr/testify/assert/membership" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestDelete\E$/^\Qid를_입력하지_않았을_때_예외_처리한다.\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUpdate/주어진_멤버쉽_타입이_아닌_경우,_예외_처리한다. in github.com/stretchr/testify/assert/membership" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang_web_programming" />
      <working_directory value="$PROJECT_DIR$/membership" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/stretchr/testify/assert/membership" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUpdate\E$/^\Q주어진_멤버쉽_타입이_아닌_경우,_예외_처리한다.\E$" />
      <method v="2" />
    </configuration>
    <configuration name="application_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang_web_programming" />
      <working_directory value="$PROJECT_DIR$/membership" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/stretchr/testify/assert" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/membership/application_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.application_test.go" />
        <item itemvalue="Go Test.TestUpdate/주어진_멤버쉽_타입이_아닌_경우,_예외_처리한다. in github.com/stretchr/testify/assert/membership" />
        <item itemvalue="Go Test.TestDelete/입력한_id가_존재하지_않을_때_예외_처리한다. in github.com/stretchr/testify/assert/membership" />
        <item itemvalue="Go Test.TestDelete/멤버십을_삭제한다. in github.com/stretchr/testify/assert/membership" />
        <item itemvalue="Go Test.TestDelete/id를_입력하지_않았을_때_예외_처리한다. in github.com/stretchr/testify/assert/membership" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/feature/week1" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>